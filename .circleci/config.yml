# See: https://circleci.com/docs/configuration-reference
# https://circleci.com/docs/language-python/ for more details
version: 2.1

# See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
executors:
  my-executor:
    docker:
      # See:https://circleci.com/developer/images/image/cimg/python
      - image: cimg/python:3.9

# See: https://circleci.com/docs/orb-intro/
orbs:
  # See : https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.1.1

# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    executor: my-executor
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Create adn activate virtual environment
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt   # core requirements
      - run:
          name: Build the package
          command: |
            . venv/bin/activate
            python setup.py sdist bdist_wheel # build package
      - persist_to_workspace:
          root: .
          paths:
            - venv
            - dist
            - sofenn.egg-info
  test:
    executor: my-executor
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install the package from .whl
          command: |
            pip install dist/*.whl
      - run:
          name: Install test requirements
          command: |
            . venv/bin/activate
            pip install -r build-requirements.txt
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage run -m pytest --junitxml=test_results
      - store_test_results:
          path: test_results
      - run:
          name: Coverage report
          command: |
            . venv/bin/activate
            coverage report
      - run:
          name: Coverage HTML
          command: |
            . venv/bin/activate
            coverage html
      - store_artifacts:
          path: coverage_report
  publish:
      executor: my-executor
      steps:
        - checkout
        - run:
            name: Install Twine
            command: |
              python -m pip install --upgrade pip
              pip install setuptools wheel twine
        - run:
            name: Build the Package
            command: python setup.py sdist bdist_wheel
        - run:
            name: Publish to PyPI
            command: |
              twine upload dist/* -u __token__ -p $PYPI_TOKEN
  hold:
    type: approval  # This job will require manual approval
    steps:
      - run:
          name: Manual Approval
          command: echo "Waiting for manual approval to proceed with publishing."
  bump-version:
    executor: my-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Configure Git
          command: |
            git config --global user.email "andrewre23@gmail.com"
            git config --global user.name "Andrew Edmonds"
            git remote set-url origin git@github.com:andrewre23/sofenn.git  # Use SSH URL
      - run:
          name: Bump version
          command: |
            . venv/bin/activate
            pip install bumpversion
            bumpversion $VERSION_BUMP_TYPE  # major/minor/patch

# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  build_and_release:
    jobs:
      - build:
          name: Build package
      - test:
          name: Run tests
          requires:
            - Build package
      - hold:
          name: Begin publish and bump version
          requires:
            - Run tests
          filters:
            branches:
              only:
                - master
      - bump-version:
          name: Bump version
          requires:
            - Begin publish and bump version
      - publish:
          name: Publish to PyPI
          requires:
            - Bump version
          filters: # only run when merges to master have the release tag: release/vX.X.X
            branches:
              only:
                - master
            tags:
              only:
                - /^release\/v\d+\.\d+\.\d+$/  # e.g., release/v1.2.3